// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId String  @id
  name String
  email String
  favs  UsersFavs[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastLoggedInAt  DateTime
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  makerName String?
  brandName String?
  barcode   String   @unique
  favs      UsersFavs[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  prices    ProductPrice[]
}

model Store {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  prices    ProductPrice[]
}

model UsersFavs {
  id  Int @id @default(autoincrement())
  user  User  @relation(fields: [userId], references: [userId])
  userId  String
  product Product @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
}

model ProductPrice {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   Int
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, storeId])
}


